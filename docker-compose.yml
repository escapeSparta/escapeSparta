version: '3.8'

services:
  escape-core:
    networks:
      - app-network
    container_name: escape-core
    image: semmmi/escape-core:latest
    #    build:
    #      context: ./escape-core
    #      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - redis
      - kafka

  escape-admin:
    networks:
      - app-network
    container_name: escape-admin
    image: semmmi/escape-admin:latest
    #    build:
    #      context: ./escape-admin
    #      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - escape-core

  escape-manager:
    networks:
      - app-network
    container_name: escape-manager
    image: semmmi/escape-manager:latest
    #    build:
    #      context: ./escape-manager
    #      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - escape-core

  escape-consumer:
    networks:
      - app-network
    container_name: escape-consumer
    image: semmmi/escape-consumer:latest
    #    build:
    #      context: ./escape-consumer
    #      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - escape-core

  escape-reservation:
    networks:
      - app-network
    container_name: escape-reservation
    image: semmmi/escape-reservation:latest
    #    build:
    #      context: ./escape-reservation
    #      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - escape-core

  escape-search:
    networks:
      - app-network
    container_name: escape-search
    image: semmmi/escape-search:latest
    #    build:
    #      context: ./escape-search
    #      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    env_file:
      - .env
    depends_on:
      - redis
      - kafka
      - escape-core

  redis:
    networks:
      - app-network
    image: "redis:alpine"
    ports:
      - "6379:6379"

  zookeeper:
    networks:
      - app-network
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    networks:
      - app-network
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - ./create-topics.sh:/docker-entrypoint-initdb.d/create-topics.sh
    depends_on:
      - zookeeper

networks:
  app-network:
    driver: bridge
