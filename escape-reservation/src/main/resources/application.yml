spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
  mail:
    host: ${MAIL_HOST} #smtp 서버 주소
    port: ${MAIL_PORT} # 메일 인증서버 포트
    username: ${MAIL_USERNAME} #구글 아이디
    password: ${MAIL_PASSWORD} #구글 비밀번호
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connection-timeout: 5000
          timeout: 5000
          write-timeout: 5000
          ssl:
            trust: smtp.gmail.com
            enable: true #반드시 필요 -> SSL 필요로 되어있으면
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}

  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVER}
    consumer:
      group-id: ${GROUP_ID}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonSerializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  aws:
    ses:
      accessKey: ${ACCESS_KEY}
      secretKey: ${SECRET_KEY}
      region: ${REGION}

admin:
  key: ${ADMIN_KEY}
jwt:
  secret:
    key: ${JWT_SECRET_KEY}
server:
  port: ${RESERVATION_SERVER_PORT}

kakao-payment:
  admin-key: ${PAY_ADMIN_KEY}
  cid: TC0ONETIME
  approve-url: https://www.escapesparta.store/pay-success
  cancel-url: https://www.escapesparta.store/pay-cancel
  fail-url: https://www.escapesparta.store/pay-fail